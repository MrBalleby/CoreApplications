//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoreApplicationDALayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CoreApplicationEntities : DbContext
    {
        public CoreApplicationEntities()
            : base("name=CoreApplicationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ConcertHall> ConcertHalls { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Customer_Customergroup> Customer_Customergroup { get; set; }
        public virtual DbSet<CustomerAddress> CustomerAddresses { get; set; }
        public virtual DbSet<CustomerGroup> CustomerGroups { get; set; }
        public virtual DbSet<Events_> Events_ { get; set; }
        public virtual DbSet<Events_ConcertHall> Events_ConcertHall { get; set; }
        public virtual DbSet<Events_Customergroup> Events_Customergroup { get; set; }
        public virtual DbSet<EventTickets_TicketsSold> EventTickets_TicketsSold { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sproc_DeleteConcertHall(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteConcertHall", idParameter);
        }
    
        public virtual int sproc_DeleteCustomer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteCustomer", idParameter);
        }
    
        public virtual int sproc_DeleteCustomer_Customergroup(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteCustomer_Customergroup", idParameter);
        }
    
        public virtual int sproc_DeleteCustomerAddres(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteCustomerAddres", idParameter);
        }
    
        public virtual int sproc_DeleteCustomerGroup(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteCustomerGroup", idParameter);
        }
    
        public virtual int sproc_DeleteEvents_(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteEvents_", idParameter);
        }
    
        public virtual int sproc_DeleteEvents_ConcertHall(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteEvents_ConcertHall", idParameter);
        }
    
        public virtual int sproc_DeleteEvents_Customergroup(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteEvents_Customergroup", idParameter);
        }
    
        public virtual int sproc_DeleteEventTickets_TicketsSold(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_DeleteEventTickets_TicketsSold", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetConcertHall_Result> sproc_GetConcertHall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetConcertHall_Result>("sproc_GetConcertHall");
        }
    
        public virtual ObjectResult<sproc_GetConcertHallDetails_Result> sproc_GetConcertHallDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetConcertHallDetails_Result>("sproc_GetConcertHallDetails", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetCustomer_Result> sproc_GetCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetCustomer_Result>("sproc_GetCustomer");
        }
    
        public virtual ObjectResult<sproc_GetCustomer_Customergroup_Result> sproc_GetCustomer_Customergroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetCustomer_Customergroup_Result>("sproc_GetCustomer_Customergroup");
        }
    
        public virtual ObjectResult<sproc_GetCustomer_CustomergroupDetails_Result> sproc_GetCustomer_CustomergroupDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetCustomer_CustomergroupDetails_Result>("sproc_GetCustomer_CustomergroupDetails", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetCustomerAddresDetails_Result> sproc_GetCustomerAddresDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetCustomerAddresDetails_Result>("sproc_GetCustomerAddresDetails", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetCustomerAddress_Result> sproc_GetCustomerAddress()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetCustomerAddress_Result>("sproc_GetCustomerAddress");
        }
    
        public virtual ObjectResult<sproc_GetCustomerDetails_Result> sproc_GetCustomerDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetCustomerDetails_Result>("sproc_GetCustomerDetails", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetCustomerGroup_Result> sproc_GetCustomerGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetCustomerGroup_Result>("sproc_GetCustomerGroup");
        }
    
        public virtual ObjectResult<sproc_GetCustomerGroupDetails_Result> sproc_GetCustomerGroupDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetCustomerGroupDetails_Result>("sproc_GetCustomerGroupDetails", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetEvents__Result> sproc_GetEvents_()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetEvents__Result>("sproc_GetEvents_");
        }
    
        public virtual ObjectResult<sproc_GetEvents_ConcertHall_Result> sproc_GetEvents_ConcertHall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetEvents_ConcertHall_Result>("sproc_GetEvents_ConcertHall");
        }
    
        public virtual ObjectResult<sproc_GetEvents_ConcertHallDetails_Result> sproc_GetEvents_ConcertHallDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetEvents_ConcertHallDetails_Result>("sproc_GetEvents_ConcertHallDetails", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetEvents_Customergroup_Result> sproc_GetEvents_Customergroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetEvents_Customergroup_Result>("sproc_GetEvents_Customergroup");
        }
    
        public virtual ObjectResult<sproc_GetEvents_CustomergroupDetails_Result> sproc_GetEvents_CustomergroupDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetEvents_CustomergroupDetails_Result>("sproc_GetEvents_CustomergroupDetails", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetEvents_Details_Result> sproc_GetEvents_Details(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetEvents_Details_Result>("sproc_GetEvents_Details", idParameter);
        }
    
        public virtual ObjectResult<sproc_GetEventTickets_TicketsSold_Result> sproc_GetEventTickets_TicketsSold()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetEventTickets_TicketsSold_Result>("sproc_GetEventTickets_TicketsSold");
        }
    
        public virtual ObjectResult<sproc_GetEventTickets_TicketsSoldDetails_Result> sproc_GetEventTickets_TicketsSoldDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproc_GetEventTickets_TicketsSoldDetails_Result>("sproc_GetEventTickets_TicketsSoldDetails", idParameter);
        }
    
        public virtual int sproc_InsertConcertHall(string name, string ticketType, Nullable<int> totalOfPpl, Nullable<int> addressId, ObjectParameter id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("ticketType", ticketType) :
                new ObjectParameter("ticketType", typeof(string));
    
            var totalOfPplParameter = totalOfPpl.HasValue ?
                new ObjectParameter("totalOfPpl", totalOfPpl) :
                new ObjectParameter("totalOfPpl", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertConcertHall", nameParameter, ticketTypeParameter, totalOfPplParameter, addressIdParameter, id);
        }
    
        public virtual int sproc_InsertCustomer(string firstname, string surname, Nullable<int> age, string mail, Nullable<int> phone, Nullable<int> customerGroupId, Nullable<int> addressId, ObjectParameter id)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var customerGroupIdParameter = customerGroupId.HasValue ?
                new ObjectParameter("customerGroupId", customerGroupId) :
                new ObjectParameter("customerGroupId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertCustomer", firstnameParameter, surnameParameter, ageParameter, mailParameter, phoneParameter, customerGroupIdParameter, addressIdParameter, id);
        }
    
        public virtual int sproc_InsertCustomer_Customergroup(Nullable<int> custId, string custName, string custMail, string groupName, Nullable<int> ticketId, ObjectParameter id)
        {
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("custId", custId) :
                new ObjectParameter("custId", typeof(int));
    
            var custNameParameter = custName != null ?
                new ObjectParameter("custName", custName) :
                new ObjectParameter("custName", typeof(string));
    
            var custMailParameter = custMail != null ?
                new ObjectParameter("custMail", custMail) :
                new ObjectParameter("custMail", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("groupName", groupName) :
                new ObjectParameter("groupName", typeof(string));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("ticketId", ticketId) :
                new ObjectParameter("ticketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertCustomer_Customergroup", custIdParameter, custNameParameter, custMailParameter, groupNameParameter, ticketIdParameter, id);
        }
    
        public virtual int sproc_InsertCustomerAddres(string street, Nullable<int> number, string city, Nullable<int> zip, ObjectParameter id)
        {
            var streetParameter = street != null ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertCustomerAddres", streetParameter, numberParameter, cityParameter, zipParameter, id);
        }
    
        public virtual int sproc_InsertCustomerGroup(string name, string grouptype, string custtype, Nullable<int> ticketId, ObjectParameter id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var grouptypeParameter = grouptype != null ?
                new ObjectParameter("grouptype", grouptype) :
                new ObjectParameter("grouptype", typeof(string));
    
            var custtypeParameter = custtype != null ?
                new ObjectParameter("custtype", custtype) :
                new ObjectParameter("custtype", typeof(string));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("ticketId", ticketId) :
                new ObjectParameter("ticketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertCustomerGroup", nameParameter, grouptypeParameter, custtypeParameter, ticketIdParameter, id);
        }
    
        public virtual int sproc_InsertEvents_(string eventName, Nullable<System.DateTime> eventDate, string grouptype, string custtype, ObjectParameter id)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("eventDate", eventDate) :
                new ObjectParameter("eventDate", typeof(System.DateTime));
    
            var grouptypeParameter = grouptype != null ?
                new ObjectParameter("grouptype", grouptype) :
                new ObjectParameter("grouptype", typeof(string));
    
            var custtypeParameter = custtype != null ?
                new ObjectParameter("custtype", custtype) :
                new ObjectParameter("custtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertEvents_", eventNameParameter, eventDateParameter, grouptypeParameter, custtypeParameter, id);
        }
    
        public virtual int sproc_InsertEvents_ConcertHall(string eventName, Nullable<System.DateTime> eventDate, Nullable<int> totalOfPpl, string ticketType, ObjectParameter id)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("eventDate", eventDate) :
                new ObjectParameter("eventDate", typeof(System.DateTime));
    
            var totalOfPplParameter = totalOfPpl.HasValue ?
                new ObjectParameter("totalOfPpl", totalOfPpl) :
                new ObjectParameter("totalOfPpl", typeof(int));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("ticketType", ticketType) :
                new ObjectParameter("ticketType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertEvents_ConcertHall", eventNameParameter, eventDateParameter, totalOfPplParameter, ticketTypeParameter, id);
        }
    
        public virtual int sproc_InsertEvents_Customergroup(string eventName, string groupName, Nullable<int> groupId, Nullable<int> ticketId, ObjectParameter id)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("groupName", groupName) :
                new ObjectParameter("groupName", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("ticketId", ticketId) :
                new ObjectParameter("ticketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertEvents_Customergroup", eventNameParameter, groupNameParameter, groupIdParameter, ticketIdParameter, id);
        }
    
        public virtual int sproc_InsertEventTickets_TicketsSold(string eventname, Nullable<System.DateTime> eventDate, Nullable<int> groupId, Nullable<int> ticketId, string custtype, string ticketType, ObjectParameter id)
        {
            var eventnameParameter = eventname != null ?
                new ObjectParameter("eventname", eventname) :
                new ObjectParameter("eventname", typeof(string));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("eventDate", eventDate) :
                new ObjectParameter("eventDate", typeof(System.DateTime));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("ticketId", ticketId) :
                new ObjectParameter("ticketId", typeof(int));
    
            var custtypeParameter = custtype != null ?
                new ObjectParameter("custtype", custtype) :
                new ObjectParameter("custtype", typeof(string));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("ticketType", ticketType) :
                new ObjectParameter("ticketType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_InsertEventTickets_TicketsSold", eventnameParameter, eventDateParameter, groupIdParameter, ticketIdParameter, custtypeParameter, ticketTypeParameter, id);
        }
    
        public virtual int sproc_UpdateConcertHall(Nullable<int> id, string name, string ticketType, Nullable<int> totalOfPpl, Nullable<int> addressId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("ticketType", ticketType) :
                new ObjectParameter("ticketType", typeof(string));
    
            var totalOfPplParameter = totalOfPpl.HasValue ?
                new ObjectParameter("totalOfPpl", totalOfPpl) :
                new ObjectParameter("totalOfPpl", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateConcertHall", idParameter, nameParameter, ticketTypeParameter, totalOfPplParameter, addressIdParameter);
        }
    
        public virtual int sproc_UpdateCustomer(Nullable<int> id, string firstname, string surname, Nullable<int> age, string mail, Nullable<int> phone, Nullable<int> customerGroupId, Nullable<int> addressId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var customerGroupIdParameter = customerGroupId.HasValue ?
                new ObjectParameter("customerGroupId", customerGroupId) :
                new ObjectParameter("customerGroupId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateCustomer", idParameter, firstnameParameter, surnameParameter, ageParameter, mailParameter, phoneParameter, customerGroupIdParameter, addressIdParameter);
        }
    
        public virtual int sproc_UpdateCustomer_Customergroup(Nullable<int> id, Nullable<int> custId, string custName, string custMail, string groupName, Nullable<int> ticketId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("custId", custId) :
                new ObjectParameter("custId", typeof(int));
    
            var custNameParameter = custName != null ?
                new ObjectParameter("custName", custName) :
                new ObjectParameter("custName", typeof(string));
    
            var custMailParameter = custMail != null ?
                new ObjectParameter("custMail", custMail) :
                new ObjectParameter("custMail", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("groupName", groupName) :
                new ObjectParameter("groupName", typeof(string));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("ticketId", ticketId) :
                new ObjectParameter("ticketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateCustomer_Customergroup", idParameter, custIdParameter, custNameParameter, custMailParameter, groupNameParameter, ticketIdParameter);
        }
    
        public virtual int sproc_UpdateCustomerAddres(Nullable<int> id, string street, Nullable<int> number, string city, Nullable<int> zip)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var streetParameter = street != null ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateCustomerAddres", idParameter, streetParameter, numberParameter, cityParameter, zipParameter);
        }
    
        public virtual int sproc_UpdateCustomerGroup(Nullable<int> id, string name, string grouptype, string custtype, Nullable<int> ticketId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var grouptypeParameter = grouptype != null ?
                new ObjectParameter("grouptype", grouptype) :
                new ObjectParameter("grouptype", typeof(string));
    
            var custtypeParameter = custtype != null ?
                new ObjectParameter("custtype", custtype) :
                new ObjectParameter("custtype", typeof(string));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("ticketId", ticketId) :
                new ObjectParameter("ticketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateCustomerGroup", idParameter, nameParameter, grouptypeParameter, custtypeParameter, ticketIdParameter);
        }
    
        public virtual int sproc_UpdateEvents_(Nullable<int> id, string eventName, Nullable<System.DateTime> eventDate, string grouptype, string custtype)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("eventDate", eventDate) :
                new ObjectParameter("eventDate", typeof(System.DateTime));
    
            var grouptypeParameter = grouptype != null ?
                new ObjectParameter("grouptype", grouptype) :
                new ObjectParameter("grouptype", typeof(string));
    
            var custtypeParameter = custtype != null ?
                new ObjectParameter("custtype", custtype) :
                new ObjectParameter("custtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateEvents_", idParameter, eventNameParameter, eventDateParameter, grouptypeParameter, custtypeParameter);
        }
    
        public virtual int sproc_UpdateEvents_ConcertHall(Nullable<int> id, string eventName, Nullable<System.DateTime> eventDate, Nullable<int> totalOfPpl, string ticketType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("eventDate", eventDate) :
                new ObjectParameter("eventDate", typeof(System.DateTime));
    
            var totalOfPplParameter = totalOfPpl.HasValue ?
                new ObjectParameter("totalOfPpl", totalOfPpl) :
                new ObjectParameter("totalOfPpl", typeof(int));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("ticketType", ticketType) :
                new ObjectParameter("ticketType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateEvents_ConcertHall", idParameter, eventNameParameter, eventDateParameter, totalOfPplParameter, ticketTypeParameter);
        }
    
        public virtual int sproc_UpdateEvents_Customergroup(Nullable<int> id, string eventName, string groupName, Nullable<int> groupId, Nullable<int> ticketId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("groupName", groupName) :
                new ObjectParameter("groupName", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("ticketId", ticketId) :
                new ObjectParameter("ticketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateEvents_Customergroup", idParameter, eventNameParameter, groupNameParameter, groupIdParameter, ticketIdParameter);
        }
    
        public virtual int sproc_UpdateEventTickets_TicketsSold(Nullable<int> id, string eventname, Nullable<System.DateTime> eventDate, Nullable<int> groupId, Nullable<int> ticketId, string custtype, string ticketType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventnameParameter = eventname != null ?
                new ObjectParameter("eventname", eventname) :
                new ObjectParameter("eventname", typeof(string));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("eventDate", eventDate) :
                new ObjectParameter("eventDate", typeof(System.DateTime));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("ticketId", ticketId) :
                new ObjectParameter("ticketId", typeof(int));
    
            var custtypeParameter = custtype != null ?
                new ObjectParameter("custtype", custtype) :
                new ObjectParameter("custtype", typeof(string));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("ticketType", ticketType) :
                new ObjectParameter("ticketType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_UpdateEventTickets_TicketsSold", idParameter, eventnameParameter, eventDateParameter, groupIdParameter, ticketIdParameter, custtypeParameter, ticketTypeParameter);
        }
    }
}
